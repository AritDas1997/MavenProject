Q1)
ERROR

 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/AritDas1997/MavenProject.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

SOLUTION

try the commands :
git pull --rebase origin master
git push origin master


Q2) 
ERROR
if you just use git push like below
$ git push

you will get an error like this

fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

SOLUTION

Use
git push origin master

Q3) 
ERROR
Let's say I had a branch named coolbranch in my repository.

Now, I decided to delete it (both remotely and locally) with:

git push origin :coolbranch
git branch -D coolbranch
Great! Now the branch is really deleted.

TO DELETE THE BRANCH FROM REMOTE 
git push origin --delete <remote-branch-name>

But when I run

git branch -a
I still get:

remotes/origin/coolbranch
Something to notice, is that when I clone a new repository, everything is fine and git branch -a doesn't show the branch.

I want to know - is there a way to delete the branch from the branch -a list without cloning a new instance?

SOLUTION

TRY THIS FOR PRUNING ALL THE BRANCHES
git remote prune origin

OUTPUT
$ git remote prune origin
Pruning origin
URL: https://github.com/AritDas1997/MavenProject.git
 * [pruned] origin/Newd
 * [pruned] origin/newchange
 * [pruned] origin/no

TRY THIS FOR PRUNING SINGLE BRANCH


git remote prune origin, as suggested in the other answer, will remove all such stale branches.
 That's probably what you'd want in most cases, but if you want to just remove that particular remote-tracking branch, you should do:

git branch -d -r origin/coolbranch
(The -r is easy to forget...)

-r in this case will "List or delete (if used with -d) the remote-tracking branches."

OUTPUT
$ git branch -d -r origin/Newdev
Deleted remote-tracking branch origin/Newdev (was ba033b1).

Q4)error: Your local changes to the following files would be overwritten by checkout:
        Test/Git KEDB.txt
Please commit your changes or stash them before you switch branches.
Aborting

SOLUTION
use git commit
